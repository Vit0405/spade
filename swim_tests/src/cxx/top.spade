#[no_mangle]
fn add(a: int<8>, b: int<8>) -> int<9> {
    a + b
}

#[no_mangle]
fn large_output(a: int<32>, b: int<32>, c: int<32>, d: int<8>) -> int<104> {
    a `concat` b `concat` c `concat` d
}

#[no_mangle]
fn large_input(a: int<65>) -> int<65> {
    a
}

struct FieldOutSub {
    b: int<30>,
    c: int<70>,
}
struct FieldOut {
    a: int<20>,
    sub: FieldOutSub,
}
#[no_mangle]
fn fields(a: int<20>, b: int<30>, c: int<70>) -> FieldOut {
    FieldOut$(
        a,
        sub: FieldOutSub$(
            b,
            c
        )
    )
}

#[no_mangle]
fn no_output(a: int<10>, b: int<10>) {}

#[no_mangle]
fn unused() {

}
