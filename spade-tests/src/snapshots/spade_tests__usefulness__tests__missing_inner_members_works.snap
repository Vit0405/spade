---
source: spade-tests/src/usefulness.rs
---
enum X {
    A,
    B
}

enum Y {
    A{x1: X, x2: X},
}

fn uwu(y: Y) -> bool {
    match y {
        Y::A(X::A, X::A) => true,
    }
}


error: Non-exhaustive match: patterns Y::A(x1: X::A, x2: X::B), Y::A(x1: X::B, x2: X::A) and 1 more not covered
   ┌─ testinput:11:5
   │  
11 │ ╭     match y {
12 │ │         Y::A(X::A, X::A) => true,
13 │ │     }
   │ ╰─────^ patterns Y::A(x1: X::A, x2: X::B), Y::A(x1: X::B, x2: X::A) and 1 more not covered


