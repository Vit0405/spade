# Ubuntu 18.04:
# - glibc-2.27
# - python3-3.7.5 (required by pyo3 for spade-python) <-- limiting factor
# Ubuntu 18.04 is planned EOL April 2030 according to https://wiki.ubuntu.com/Releases (2022-08-03)
image: ubuntu:18.04

variables:
    CARGO_HOME: $CI_PROJECT_DIR/cargo
    FF_ENABLE_BASH_EXIT_CODE_CHECK: "true"
    GIT_SUBMODULE_STRATEGY: normal
    RUST_IMAGE: "rust:1.70"
    # Faster zipping helping with cache sync speeds (https://gitlab.com/gitlab-org/gitlab-runner/-/issues/1797)
    FF_USE_FASTZIP: "true"
    CACHE_COMPRESSION_LEVEL: fast

stages:
    - test
    - trawler

cache:
    key:
        files:
            - Cargo.lock
    paths:
        - target
        - $CARGO_HOME

clippy:
    stage: test
    image: $RUST_IMAGE
    script:
        - rustup component add clippy
        - cargo install gitlab_clippy
        - cargo clippy -V
        - cargo clippy --workspace --exclude spade-cxx -- --allow clippy::useless_format
    after_script:
        - cargo clippy --workspace --exclude spade-cxx --message-format=json -- --allow clippy::useless_format | $CARGO_HOME/bin/gitlab-clippy > gl-code-quality-report.json
    artifacts:
        reports:
            codequality: gl-code-quality-report.json
        expire_in: 1 week

test:linux:
    stage: test
    image: $RUST_IMAGE
    script:
        - cargo -V
        - rustc -V
        - cargo test --workspace --exclude spade-cxx --color=always
        - cargo doc --no-deps

test:linux-latest:
    stage: test
    image: "rust:latest"
    script:
        - cargo -V
        - rustc -V
        - cargo test --workspace --exclude spade-cxx --color=always
        - cargo doc --no-deps

test:macos-aarch64:
  image: potyarkin/cirrus-run
  before_script:
    - sed -e "s|[@]CI_REPOSITORY_URL@|$CI_REPOSITORY_URL|g"
          -e "s|[@]CI_COMMIT_REF_NAME@|$CI_COMMIT_REF_NAME|g"
          -i .cirrus.yml
  script:
    - cirrus-run --github sornas/spade-cirrus-ci

output_test:
    # Ubuntu 18.04 only has iverilog-10.1 but 22.04 has 11.0, which it seems like we need.
    image: ubuntu:22.04
    variables:
        APT_PYTHON_VERSION: "3.10"
    stage: test
    script:
        - apt update
        - apt install -y iverilog curl gcc make python$APT_PYTHON_VERSION
        # pyo3 expects exactly `python3` in the path.
        - command -v /usr/bin/python3 || ln -s /usr/bin/python$APT_PYTHON_VERSION /usr/bin/python3
        - curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain none
        - source ./cargo/env
        - rustup install 1.70
        - source ./cargo/env
        - cd output_test && make

swim_tests:
    image: $RUST_IMAGE
    stage: test
    script:
        - apt update
        - apt install -y iverilog python3-dev python3-venv
        - cargo install --git https://gitlab.com/spade-lang/swim --locked
        - cd swim_tests
        - $CARGO_HOME/bin/swim test

coverage:
    image: xd009642/tarpaulin
    variables:
        APT_PYTHON_VERSION: "3"
    script:
        - apt-get install -y pkg-config
        # spade-python currently does not build with tarpaulin, but we also don't
        # have many tests there so we'll ignore it
        - cargo tarpaulin --workspace --exclude spade-python --exclude spade-cxx --out xml --target-dir target/tarpaulin
    coverage: '/^\d+.\d+% coverage/'
    artifacts:
        reports:
            coverage_report:
                coverage_format: cobertura
                path: cobertura.xml

cargo-fmt:
    stage: test
    image: $RUST_IMAGE
    cache: [] # Disable cache since it takes too much space in gitlab
    script:
        - rustup component add rustfmt
        # pass --check to rustfmt to error if un-formatted
        - cargo fmt -- --check

typos-and-todos:
    stage: test
    cache: [] # Disable cache since the spell checker finds typos in other peoples source code
    before_script:
        - apt update
        - apt install -y wget
        - wget https://github.com/crate-ci/typos/releases/download/v1.16.25/typos-v1.16.25-x86_64-unknown-linux-musl.tar.gz -O typos.tar.gz
        # Extract only the typos executable to not get a docs folder which the typo checker
        # will find typos in
        - tar xzf typos.tar.gz ./typos
    script:
        - ./typos
          # invert exit code of grep while still printing all matches
        - set -e; find . -name "*.rs" | xargs grep -Ei "// *TODO" || exit 0 && exit 1
    after_script:
        - >
            if [ $CI_JOB_STATUS == 'success' ]; then
              echo 'SUCCESS'
            else
              echo 'Running again to give you all output since the test failed'
              ./typos || echo ""
              find . -name "*.rs" | xargs grep -Ei "// *TODO" || echo ""
            fi
cxx:
    image: $RUST_IMAGE
    stage: test
    cache: [] # Disable cache since it takes too much space in gitlab
    variables:
        APT_PYTHON_VERSION: "3"
    script:
        cargo build --workspace --package spade-cxx

trawler:
    stage: trawler
    allow_failure: true
    variables:
        UPSTREAM_BRANCH: $CI_COMMIT_REF_NAME
    trigger: spade-lang/trawler
