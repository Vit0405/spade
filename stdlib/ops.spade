mod std {
// Builtin "operators"
mod ops {
    /// Divide x by 2**pow truncating towards 0.
    ///
    /// Example outputs:
    ///
    /// 2/2 = 1
    /// 3/2 = 0
    /// -3/2 = 0

    // FIXME: Verify that the x >= 0 is not actually implemented as a comparator
    // FIXME: Implement in spade rather than as a compiler intrinsic when spade
    // supports codegen for generics
    // lifeguard spade#140
    // FIXME: pow and result should probably not be `N` but type inference is not good
    // enough for that yet
    fn div_pow2<#N>(x: int<N>, pow: int<N>) -> int<N> __builtin__
}
}
