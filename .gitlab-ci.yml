# image: "scorpil/rust:nightly"
image: rust:latest

variables:
    CARGO_HOME: $CI_PROJECT_DIR/cargo_cache

clippy:
    stage: test
    before_script:
        - rustup component add clippy
        - cargo install gitlab_clippy
    script:
        - cargo clippy
    after_script:
        - cargo clippy --message-format=json | $CARGO_HOME/bin/gitlab-clippy > gl-code-quality-report.json
    artifacts:
        reports:
            codequality: gl-code-quality-report.json
        expire_in: 1 week

build:
    script:
        - cargo build --color=always
    cache:
        # pull the old cache and push the new when done
        policy: pull-push
        paths:
            - target/
            - cargo/

test:
    needs: [build]
    script:
        - cargo test --color=always
    cache:
        # only pull the cache since the build pushes it
        policy: pull
        paths:
            - target/
            - cargo/

output_test:
    needs: [build]
    before_script:
        - apt update
        - apt install -y iverilog
    script:
        - cd output_test && make
    cache:
        # only pull the cache since the build pushes it
        paths:
            - target/
            - cargo/

test cargo-fmt:
    before_script:
        - rustup component add rustfmt
    script:
        # pass --check to rustfmt to error if un-formatted
        - cargo fmt -- --check
    cache:
        # only pull the cache since the build pushes it
        policy: pull
        paths:
            - target/
            - cargo/

variables:
    CARGO_HOME: $CI_PROJECT_DIR/cargo
    GIT_SUBMODULE_STRATEGY: normal
