---
source: spade-tests/src/typeinference.rs
---
use std::ports::new_mut_wire;
use std::ports::read_mut_wire;

struct ReadPort_<W> { }

struct port FifoRead<#W> { }

entity fifo_read_side<#W>(
    write_ptr_w: uint<W>,
    ram_read: ReadPort_<W>,
    read_ptr_wire: &mut uint<W>,
) -> FifoRead<W> {
    FifoRead$()
}

entity fifo<#W>(
    ram_read: ReadPort_<W>
) -> FifoRead<W> {
    let read_ptr_wire = inst new_mut_wire();

    let read_ptr_w = inst read_mut_wire(read_ptr_wire);

    let write_ptr_w  = 0;

    let full_w = 0 == read_ptr_w;


    inst fifo_read_side$(
            write_ptr_w,
            ram_read,
            read_ptr_wire,
        )
}

entity fifo_test_harness(
    ram_read: ReadPort_<4>
) {
    let _ = inst fifo::<4>$(ram_read);
}


error: read_ptr_wire is unused
   ┌─ testinput:11:5
   │
11 │     read_ptr_wire: &mut uint<W>,
   │     ^^^^^^^^^^^^^ read_ptr_wire is unused
   │
   = note: read_ptr_wire is a &mut value which must be set
   = The error is in a generic unit instantiated at
     ╰ testinput:28 fifo_read_side<4>
     ╰ testinput:38 fifo<4>
