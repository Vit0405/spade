# image: "scorpil/rust:nightly"
image: rust:1.59

variables:
    CARGO_HOME: $CI_PROJECT_DIR/cargo
    FF_ENABLE_BASH_EXIT_CODE_CHECK: "true"
    GIT_SUBMODULE_STRATEGY: normal

clippy:
    before_script:
        - rustup component add clippy
        - cargo install gitlab_clippy
    script:
        - cargo clippy -- --allow clippy::useless_format
    after_script:
        - cargo clippy --message-format=json -- --allow clippy::useless_format | $CARGO_HOME/bin/gitlab-clippy > gl-code-quality-report.json
    artifacts:
        reports:
            codequality: gl-code-quality-report.json
        expire_in: 1 week
    cache:
        key:
            files:
                - Cargo.lock
        paths:
            - target
            - $CARGO_HOME

test:
    script:
        - cargo test --color=always
    cache:
        key:
            files:
                - Cargo.lock
        paths:
            - target
            - $CARGO_HOME

output_test:
    before_script:
        - apt update
        - apt install -y iverilog
    script:
        - cd output_test && make
    cache:
        key:
            files:
                - Cargo.lock
        paths:
            - target
            - $CARGO_HOME

cargo-fmt:
    before_script:
        - rustup component add rustfmt
    script:
        # pass --check to rustfmt to error if un-formatted
        - cargo fmt -- --check

grep-todo:
    script:
        # invert exit code of grep while still printing all matches
        - set -e; find . -name "*.rs" | xargs grep -E "// ?TODO" || exit 0 && exit 1
