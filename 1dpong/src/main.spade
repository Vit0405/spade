// Generates game ticks
entity tick_gen(clk: clk, rst: bool, tick_length: int<32>) -> bool {
    // Counter to lower the frequency
    reg(clk) timer reset (rst: 0) = if timer == tick_length {
        0
    } else {
        timer + 1
    };

    timer == tick_length
}

entity pong(clk: clk, rst: bool, tick_len: int<32>) -> int<8> {
    let tick = inst tick_gen$(clk, rst, tick_length = tick_len);

    let board_end_right = 0b0000_0001;
    let board_end_left = 0b1000_0000;

    reg(clk) (ball, direction) reset (rst: (4, false)) = {
        let new_direction =
            if ball == board_end_left {
                true
            }
            else if ball == board_end_right {
                false
            }
            else {
                direction
            };

        let new_ball =
            if tick {
                if direction {
                    ball >> 1
                }
                else {
                    ball << 1
                }
            }
            else {
                ball
            };

        (new_ball, new_direction)
    };

    ball
}
